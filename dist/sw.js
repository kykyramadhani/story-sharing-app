importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.5.4/workbox-sw.js"),workbox.setConfig({debug:!0}),workbox.precaching.precacheAndRoute([{'revision':null,'url':'2b3e1faf89f94a483539.png'},{'revision':null,'url':'416d91365b44e4b4f477.png'},{'revision':null,'url':'8f2c4d11474275fbc161.png'},{'revision':'00b20401c73e16efa7d9adc443385c0c','url':'app.bundle.js'},{'revision':'a09afd57099dc21e9263ff61a08dff24','url':'app.bundle.js.LICENSE.txt'},{'revision':'495837a0676188947d9b1c149e50e57e','url':'assets/icon-192x192.png'},{'revision':'892592eccaf30b2a6832995dc92eb050','url':'assets/icon-512x512.png'},{'revision':'2273e3d8ad9264b7daa5bdbf8e6b47f8','url':'assets/marker-icon.png'},{'revision':'44a526eed258222515aa21eaffd14a96','url':'assets/marker-shadow.png'},{'revision':'f59dec227b60bea584a1fa9c9d27c4c7','url':'assets/screenshots/desktop.png'},{'revision':'c1d299a4ce2baa6c9543e2e661981bdb','url':'assets/screenshots/mobile.png'},{'revision':'caf0da91915ab9bf4ce3d6a10dd034aa','url':'assets/shortcut-icon.png'},{'revision':'561ee209bfed7c22338ba9d5a4f539d3','url':'feather.min.js'},{'revision':'5096f450cc0c47d9dbc208cc3e1d1b42','url':'feather.min.js.LICENSE.txt'},{'revision':'9ce296ec4a275b8197f132da7e0fe58f','url':'index.html'},{'revision':'9be81fbed993c61b68be6a33d9378f04','url':'manifest.json'},{'revision':'cb102ed58f7d5b1af753fc48f7f4672d','url':'styles/style.css'}]||[]),workbox.routing.registerRoute(new RegExp("https://story-api.dicoding.dev/v1/stories.*"),new workbox.strategies.NetworkFirst({cacheName:"api-cache"})),self.addEventListener("install",(t=>{self.skipWaiting()})),self.addEventListener("activate",(t=>{t.waitUntil(self.clients.claim())})),self.addEventListener("push",(t=>{const e=t.data?t.data.json():{title:"Default Notification",body:"No data provided"};t.waitUntil(self.registration.showNotification(e.title,{body:e.options.body||"No body provided",icon:"/assets/icon-192x192.png"}))})),self.addEventListener("notificationclick",(t=>{t.notification.close(),t.waitUntil(clients.matchAll({type:"window"}).then((t=>{for(const e of t)if("/"===e.url&&"focus"in e)return e.focus();if(clients.openWindow)return clients.openWindow("/")})))}));